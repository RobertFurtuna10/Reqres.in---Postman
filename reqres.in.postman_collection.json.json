{
	"info": {
		"_postman_id": "3ff42015-fc4e-4cae-96e3-77a2dd142376",
		"name": "reqres.in",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30229388",
		"_collection_link": "https://winter-zodiac-863664.postman.co/workspace/TMTA12~da86ca65-8915-4a45-9d40-14d23d111c58/collection/30229388-3ff42015-fc4e-4cae-96e3-77a2dd142376?action=share&source=collection_link&creator=30229388"
	},
	"item": [
		{
			"name": "getListUsers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify that the results for the id 7 are correct\", function () {\r",
							"    var raspuns = pm.response.json().data;\r",
							"    pm.expect(raspuns[0].id).to.eql(7);\r",
							"    pm.expect(raspuns[0].first_name).to.eql(\"Michael\");\r",
							"    pm.expect(raspuns[0].last_name).to.eql(\"Lawson\");\r",
							"    pm.expect(raspuns[0].email).to.eql(\"michael.lawson@reqres.in\");\r",
							"    \r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verify that the id for the second page is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(pm.response.json().page).to.eql(2);\r",
							"    });\r",
							"\r",
							"pm.test(\"Verify if status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verify that the status message is OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that the response time is below 200 ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users?page=2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "getSingleuserNotFound",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify that the response returns nothing when we enter an invalid user id\", function () \r",
							" {var raspuns=pm.response.json();\r",
							"        pm.expect(raspuns.error).to.equal;\r",
							"    });\r",
							"\r",
							"    pm.test(\"Verify if status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verify that the status message is Not Found\", function () {\r",
							"    pm.response.to.have.status(\"Not Found\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that the response time is below 200 ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users/23",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"23"
					]
				}
			},
			"response": []
		},
		{
			"name": "postCreateUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify that the respons returns a new user id with name Robert and job leader\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql('Robert');\r",
							"    pm.expect(jsonData.job).to.eql('leader');\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that the status message is Created\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that the response time is below 300 ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Robert\",\r\n    \"job\": \"leader\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "patchUpdateUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify that the name Robert is updated to Robert44\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql('Robert44');\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that the status message is OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that the response time is below 300 ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Robert44\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users/2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Verify if the status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that the status message is No Content\", function () {\r",
							"    pm.response.to.have.status(\"No Content\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that the response time is below 300 ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users/id=2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"id=2"
					]
				}
			},
			"response": []
		}
	]
}